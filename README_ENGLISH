--------------------------------------------------

  ===  ==  \  |
   |  |__|  \ |    RADARIVAATUR
   |  |\     \|

--------------------------------------------------

Version 2023.6.22

Tarmo Tanilsoo, 2023
_____
Only Python 3 is supported.

In case notifying me about problems, please send me also the file you are having problem with so I could fully debug the situation.

-----
** USAGE

Starting

On Linux (and other OSes using Bash shell), in this folder:

./run

On Windows, go to the src directory and run main.pyw (Please note the change in file extension!)

---
Available modes:
* Panning
* Zooming
* Information
* PseudoRHI
* Range unfolding

In the panning mode, you can only pan the map by dragging it with mouse.

In zooming mode, you can zoom in/out by clicking or dragging.
Left click - zoom in, right click - zoom out.
In the information mode, you can get information about a single data bin by clicking on it.
In the range unfolding mode, it is possible to select an area on the image and move it further away from the radar by maximum unambiguous range. This requires PRF to be defined in the metadata.

You can export the current image display into formats supported by PIL.

Also, you can create pseudoRHI's from desired azimuths (data file needs to contain a volume scan).

Since 2016.1.11 it is also possible to add dynamic data points(including icons on a radar image) to the software, akin to placefiles in common software. Data is described in JSON format, documentation for the format is available in /doc folder. Also, it is possible to override default colortables in Tools menu.

See also a demonstration video to get an idea of the user interface and how to use it:
http://youtu.be/RZOYDvJv434

-----
** REQUIREMENTS

* Python 2 or 3
* Tkinter
* Python Imaging Library, can be its Pillow fork. (The development machine uses the Pillow fork,
as it is distributed with newer Ubuntu distributions). Also needs to have ImageTk module(is a separate 
package at least on Ubuntu)
* H5PY
* Numpy
* NetCDF4

If you're using Windows and Tkinter is installed, then the easiest way is probably to fetch packages h5py and Pillow from Python Package Index repository. Other dependencies should be mostly coming automatically with them.

I recommend to have at least 1 GB of RAM.

-----
** SUPPORTED FORMATS

* Nexrad Level III - products 94, 99, 157, 161, 162, 163, 165
* Nexrad Level II - all products (Both MSG1 and MSG31 beginning from version EX1)
    NB! Files received from NCDC archives are initially compressed in GZip. You need to unpack them
    first before viewing in this application.
* ODIM H5 - H5rad 1.2 and above. Polar volumes(PVOL) only. Supported products: DBZ(including DBZH, DBZV), VRAD, VRADH, KDP, PHIDP, RHOHV, WRAD, ZDR, SQI, TH, TV. Your mileage may vary depending on how the file has been composed.
* DWD BUFR - aimed at radar images in DWD's Open Data output
* KNMI HDF5 - aimed at radar images in KNMI's Open Data output. Same products supported as in ODIM. Please note that the quantity definitions are preliminary and subject to errors.
* IRIS RAW
* DORADE - very crude support at the moment.
* JMA GRIB - polar coordinate data. File name must follow JMA's convention for correct product detection.
* CfRadial - still quite crude, aimed at files generated by PyART

I am open to adding additional formats, but for that I'd need the format documentation and example files to experiment with, as well as an example of expected output.


Used materials:

Map contours - Natural Earth - http://www.naturalearthdata.com
Font used on rendered images - DejaVu Sans Condensed - http://dejavu-fonts.org,  Noto Sans JP: https://fonts.google.com/noto/specimen/Noto+Sans+JP
Example file in /data directory: NEXRAD Level 2 arhiiv(See note above!) - www.ncdc.noaa.gov/nexradinv/ - (doi:10.7289/V5W9574V)
Example dynamic data file is based from SPC storm reports for 20 May 2013.

-------
Notes:

* Program will appear to freeze in some operations that still use a single thread. Give it time.
* On first run, the program will start longer and use more memory as the files containing the map contours are compiled into pyc. It will be faster on subsequent runs.
* At places things are quite raw. There may be inaccuracies(kindly notify me if you find any).
* Some inaccuracies possible in positioning. If you see any, feel free to let me know. I have observed the positioning even varies between different software packages.
* ODIM H5 abbreviations are used in product selectors regardless of data file type except for data in DORADE format.
* PseudoRHI drawing method has been changed beginning with version EX1, so bins may appear higher than in prior versions.
* ODIM H5 output is preliminary with the goal of having a single output format where the program could dump data from other sources. Due to the way some data sources provide data, especially the Americans (varying rscale and nbins by elevation), not all exports will probably be fully up to the ODIM standard. German data should export fine though.
* Algorithm for dealiasing radial velocities is very primitive and depending on file content, manual work of selecting a pattern of different dealiasing directions may be necessary.
* Arabic language support is prone to translation errors due to the level of my proficiency, any native Arabic speaking radar meteorologists are kindly invited to send fixes via pull requests. This also has not been tested on Mac OS given that I have no access to that operating system.
* Same caveat applies to Japanese language. ミスが見たら、ぜひ連絡してください！

---------
Contact:

E-mail: tarmotanilsoo@gmail.com
Twitter: @es5nhc
